// ---------------------------------------------------------------------------------------------------
// <auto-generated>
// This code was generated by LinqToDB scaffolding tool (https://github.com/linq2db/linq2db).
// Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
// </auto-generated>
// ---------------------------------------------------------------------------------------------------

using LinqToDB;
using LinqToDB.Data;
using System.Linq;
using System.Threading;
using System.Threading.Tasks;

#pragma warning disable 1573, 1591

namespace Popug.Analytic.Api.Data
{
	public partial class AnalyticDb : DataConnection
	{
		public AnalyticDb()
		{
			InitDataContext();
		}

		public AnalyticDb(string configuration)
			: base(configuration)
		{
			InitDataContext();
		}

		public AnalyticDb(DataOptions<AnalyticDb> options)
			: base(options.Options)
		{
			InitDataContext();
		}

		partial void InitDataContext();

		public ITable<OperationEntity> Operations => this.GetTable<OperationEntity>();
		public ITable<UserEntity>      Users      => this.GetTable<UserEntity>();
	}

	public static partial class ExtensionMethods
	{
		#region Table Extensions
		public static OperationEntity Find(this ITable<OperationEntity> table, int operationId)
		{
			return table.FirstOrDefault(e => e.OperationId == operationId);
		}

		public static Task<OperationEntity> FindAsync(this ITable<OperationEntity> table, int operationId, CancellationToken cancellationToken = default)
		{
			return table.FirstOrDefaultAsync(e => e.OperationId == operationId, cancellationToken);
		}

		public static UserEntity Find(this ITable<UserEntity> table, int id)
		{
			return table.FirstOrDefault(e => e.Id == id);
		}

		public static Task<UserEntity> FindAsync(this ITable<UserEntity> table, int id, CancellationToken cancellationToken = default)
		{
			return table.FirstOrDefaultAsync(e => e.Id == id, cancellationToken);
		}
		#endregion
	}
}
