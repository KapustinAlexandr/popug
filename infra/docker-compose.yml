version: "3.8"

volumes:
    zookeeper_data:
    kafka_data:
    pg_auth_data:

networks:
    default:
        driver: bridge
        attachable: true

services:
    auth:
        image: popug-keycloak:latest
        build:
            context: keycloak
            dockerfile: Dockerfile
        ports:
            - 8080:8080
        volumes:
            # чтобы каждый раз не настраивать realm, сохраним его и потом 
            # будем импортировать при перезапуске
            - ./keycloak/import:/opt/keycloak/data/import:ro
        environment:
            KEYCLOAK_ADMIN: admin
            KEYCLOAK_ADMIN_PASSWORD: admin
            KC_DB: postgres
            KC_DB_URL: jdbc:postgresql://db-auth/keycloak
            KC_DB_USERNAME: keycloak
            KC_DB_PASSWORD: keycloak
            # Настройка event listner'а для записи событий в кафку
            # Названия топиков для пользовательских и админских событий
            KAFKA_TOPIC: auth-events
            KAFKA_ADMIN_TOPIC: auth-admin-events
            KAFKA_CLIENT_ID: keycloak
            KAFKA_BOOTSTRAP_SERVERS: kafka:9092
            # Данный event listner умеет фильтровать только пользовательские события 
            # Решил пока ограничится только созданием, изменением пользователя, и логин/логаут
            KAFKA_EVENTS: REGISTER,UPDATE_PROFILE,LOGIN,LOGOUT
        depends_on:
            - db-auth
        command: start-dev --import-realm --health-enabled=true --hostname=localhost

    db-auth:
        image: postgres:15-alpine
        restart: always
        environment:                    
            POSTGRES_USER: keycloak
            POSTGRES_PASSWORD: keycloak
            POSTGRES_DB: keycloak
            PGDATA: /var/lib/postgresql/data/pgdata
        ports:
            - 35432:5432
        volumes:
            - pg_auth_data:/var/lib/postgresql/data:rw

    zookeeper:
        restart: always
        image: bitnami/zookeeper:latest
        volumes:
            - zookeeper_data:/bitnami/zookeeper
        environment:    
            - ALLOW_ANONYMOUS_LOGIN=yes
    
    kafka:        
        image: wurstmeister/kafka:latest
        sysctls:
            - net.ipv4.vs.conn_reuse_mode=0
            - net.ipv4.vs.expire_nodest_conn=1    
        environment:
            ALLOW_PLAINTEXT_LISTENER: "yes"
            HOSTNAME: "kafka"
            KAFKA_ADVERTISED_HOST_NAME: "kafka"
            KAFKA_BROKER_ID: "1000"
            KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE: "true"
            KAFKA_CFG_ZOOKEEPER_CONNECT: "zookeeper:2181"
            KAFKA_HEAP_OPTS: "-Xmx512M -Xms512M"
            KAFKA_LOG_RETENTION_HOURS: "24"
            KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
            KAFKA_CREATE_TOPICS: "auth-admin-events:1:1,auth-events:1:1"
        depends_on:
            - zookeeper
        volumes:
            - kafka_data:/kafka
    
    kafka-ui:        
        image: provectuslabs/kafka-ui
        environment:
            KAFKA_CLUSTERS_0_NAME: popug
            KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9092
            KAFKA_CLUSTERS_0_ZOOKEEPER: zookeeper:2181
            KAFKA_CLUSTERS_0_SCHEMAREGISTRY: http://apicurio:8080/apis/ccompat/v6
        depends_on:
            - kafka
            - apicurio
        ports:
            - "39090:8080"

    db-adminer: 
        image: adminer
        restart: always
        ports:
            - 38081:8080

    apicurio:
        image: apicurio/apicurio-registry-sql:2.5.8.Final
        ports:
            - "38086:8080"
        environment:
            REGISTRY_DATASOURCE_URL: 'jdbc:postgresql://db-auth/schema_db'
            REGISTRY_DATASOURCE_USERNAME: keycloak
            REGISTRY_DATASOURCE_PASSWORD: keycloak
        depends_on:
            - db-auth